name: Python - Master Push

# runs on master and tag (aka release) pushes to build all current platforms & minor python versions
# publishes to https://pypi.org/project/pyvalhalla/ for tag pushes
# publishes to https://pypi.org/project/pyvalhalla-git/ for master pushes

on:
  push:
    branches:
      # - 'master'
      - 'nn-python-packaging'
    tags:
      - "*"
    # TODO: also run this on tags once all platforms are ready
    paths-ignore:
      - "*.md"
      - .circleci/
      - docs/
      - run_route_scripts/
      - test_requests/

jobs:
  build_wheels:
    name: Push - cp*, ${{ matrix.platform }}
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - image: ubuntu-latest
            platform: linux
          # - image: windows-latest
          #   platform: windows
          # - image: macos-latest
          #   platform: macos
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        # we need to fetch all tags for setuptools-scm to work properly
        fetch-depth: 0
        fetch-tags: true

    # this is only used to run cibuildwheel
    - name: Configure Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Get branch name
      run: echo "VALHALLA_BRANCH=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_ENV

    - name: Determine package to publish
      run: |
        VALHALLA_RELEASE_PKG="pyvalhalla"
        if [[ "${GITHUB_REF#refs/heads/}" != "refs/tags*" ]]; then
          VALHALLA_RELEASE_PKG="${VALHALLA_RELEASE_PKG}-git"
        fi
        echo "VALHALLA_RELEASE_PKG=${VALHALLA_RELEASE_PKG}" >> $GITHUB_ENV

    - name: Restore cache
      uses: actions/cache/restore@v4
      with:
        path: /project/.cache/ccache
        key: ccache-manylinux_2_28_x86_64-${{ env.VALHALLA_BRANCH }}
        restore-keys: ccache-manylinux_2_28_x86_64-

    - uses: pypa/cibuildwheel@v2.23.3
      env:
        # /host is mounted from the host system to the manylinux container
        CIBW_ENVIRONMENT: >
          CCACHE_DIR=/host/project/.cache/ccache
          VALHALLA_RELEASE_PKG=${{ env.VALHALLA_RELEASE_PKG }}

    - name: Save cache
      if: always()
      uses: actions/cache/save@v4
      with:
        path: /project/.cache/ccache
        key: ccache-manylinux_2_28_x86_64-${{ env.VALHALLA_BRANCH }}

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        path: wheelhouse/*.whl

  upload_all:
    name: Upload if release
    needs: [build_wheels]
    runs-on: ubuntu-latest

    permissions:
      id-token: write # This is required for requesting the JWT from Github for PyPI

    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - uses: actions/download-artifact@v4
      with:
        name: artifact
        path: dist

    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.12.4
      with:
        # TODO: publish to real PyPI once all platforms are ready
        repository-url: https://test.pypi.org/legacy/
        verbose: true
